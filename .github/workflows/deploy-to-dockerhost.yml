---
name: deploy_to_dockerhost
# yamllint disable rule:line-length

on:
  release:
    types: [released]
  workflow_dispatch:
    
run-name: ${{ github.ref_name }} -> deploy_to_dockerhost (
  ${{ github.run_attempt }}
  )

    
jobs:
  deploy_to_dockerhost:
    name: deploy_to_dockerhost
    runs-on: ubuntu-latest

    steps:
      - name: Get current date and time
        id: datetime
        run: echo "datetime=$(date +'%Y-%m-%dT%H-%M-%SZ')" >> $GITHUB_OUTPUT

      - name: Display date/time in output (forensics when triaging issues)
        run: echo ${{ steps.datetime.outputs.datetime }}

      - uses: actions/checkout@v4
        with:
          # This captures the branch/tag reference of the event
          ref: ${{ github.ref }}  


      - uses: easingthemes/ssh-deploy@v5.1.0
        name: ssh deploy
        with:
          SSH_PRIVATE_KEY: ${{ secrets.PROD_SSH_PRIVATE_KEY }}
          ARGS: "-avzi --delete --exclude=log/ --exclude-from=.deploy/rsync-exclusions "
          SOURCE: "/"
          REMOTE_HOST: ${{ vars.PROD_SSH_HOST }}
          REMOTE_USER: ${{ secrets.PROD_SSH_USER }}
          TARGET: "intellireading/"
          SCRIPT_BEFORE: |
            mkdir -p intellireading
            cd intellireading
            docker compose --env-file .env.prod down
          SCRIPT_AFTER: |
            cd intellireading
            sed -i -e 's,@@API_SERVER_TURNSTILE_SECRET_KEY@@,${{ secrets.API_SERVER_TURNSTILE_SECRET_KEY}},g' docker-compose.prod.yml
            sed -i -e 's,@@OTEL_COLLECTOR_OTEL_EXPORTER_OTLP_ENDPOINT@@,${{ vars.OTEL_COLLECTOR_OTEL_EXPORTER_OTLP_ENDPOINT}},g' docker-compose.prod.yml
            sed -i -e 's,@@OTEL_COLLECTOR_OTEL_EXPORTER_OTLP_API_KEY@@,${{ secrets.OTEL_COLLECTOR_OTEL_EXPORTER_OTLP_API_KEY}},g' docker-compose.prod.yml
            sed -i -e 's,@@API_SERVER_API_KEY@@,${{ secrets.API_SERVER_API_KEY}},g' docker-compose.prod.yml
            docker compose --env-file .env.prod up -d --remove-orphans --build