{
    "authentication": {
        "turnstile" : {
            "enabled": "${API_SERVER_TURNSTILE_ENABLED}",
            "secret_key" : "${API_SERVER_TURNSTILE_SECRET_KEY}"
        },
        "api_key_management" : {
            "valid_api_keys" : 
                "${API_SERVER_API_KEY}"
            
        }
        
    },

    "middleware": {
        "CORSMiddleware": 
        {
            "kwargs":{
                "allow_origins": [
                    "http://localhost:8080",
                    "http://localhost",
                    "https://www.intellireading.com",
                    "https://intellireading.com",
                    "http://intellireading.test:8080",
                    "http://www.intellireading.test:8080"
                ],
                "allow_credentials": true,
                "allow_methods": ["*"],
                "allow_headers" : ["*"]
            }
        },
        "RequestIdMiddleware": {
            "enabled": true,
            "kwargs": {
                "header": "X-Request-ID"
            }
        },
        "ResponseTimeMiddleware": {
            "enabled": true,
            "kwargs": {
                "header": "X-Response-Time"
            }
        },
        "LogCallMiddleware": {
            "enabled": true,
            "kwargs": {
                "log_level": 10 
            }
        }, 
        "ExceptionHandlerMiddleware" : {
            "enabled": true
        }

    },
    "logging": {
        "version": 1,
        "disable_existing_loggers": false,
        "loggers": {
            "root": {
                "level": "INFO",
                "handlers": ["console", "fluentd"]
            },
            "routers.metaguiding": {
                "level": "INFO",
                "handlers": ["console"],
                "qualname": "routers.metaguiding",
                "propagate": 0
            }
        },
        "handlers": {
            "console": {
                "class": "logging.StreamHandler",
                "level": "NOTSET",
                "formatter": "console_formatter",
                "stream": "ext://sys.stdout"
            },
            "fluentd": {
                "class": "fluent.handler.FluentHandler",
                "host": "otel_collector",
                "port": 24224,
                "level": "NOTSET",
                "formatter": "fluentd_formatter",
                "tag": "${API_SERVER_SERVICE_NAME}"
            }

        },
        "formatters": {
            "console_formatter": {
                "format": "%(asctime)s.%(msecs)03d %(name)-20s %(levelname)-8s %(message)s",
                "datefmt": "%Y-%m-%d,%H:%M:%S"
            },
            "fluentd_formatter": {
                "()" : "fluent.handler.FluentRecordFormatter",
                "format": {
                    "hostname": "%(hostname)s",
                    "where": "%(module)s.%(funcName)s",
                    "stack_trace": "%(exc_text)s",
                    "level": "%(levelname)s",
                    "service_name": "${API_SERVER_SERVICE_NAME}",
                    "service_version": "${API_SERVER_VERSION}",
                    "service_instance_id": "${API_SERVER_INSTANCE_ID}"
                }
            }

                
        }
    },
    "instrumentation": {
        "service_name": "${API_SERVER_SERVICE_NAME}",
        "service_version": "${API_SERVER_VERSION}",
        "service_instance_id": "${API_SERVER_INSTANCE_ID}",
        "enabled": "${API_SERVER_OTEL_ENABLED}",
        "tracing": {
            "enabled": "${API_SERVER_OTEL_TRACING_ENABLED}",
            "span_processors": [
                {
                    "class": "BatchSpanProcessor",
                    "module": "opentelemetry.sdk.trace.export",
                    "enabled": true,
                    "kwargs": {
                        "span_exporter": {
                            "class": "OTLPSpanExporter",
                            "module": "opentelemetry.exporter.otlp.proto.grpc.trace_exporter"
                        }
                    }
                },
                {
                    "class": "SimpleSpanProcessor",
                    "module": "opentelemetry.sdk.trace.export",
                    "enabled": false,
                    "kwargs": {
                        "span_exporter": {
                            "class": "ConsoleSpanExporter",
                            "module": "opentelemetry.sdk.trace.export",
                            "kwargs": {}
                        }
                    }
                }
            ]
        }, 
        "metrics": {
            "enabled": "${API_SERVER_OTEL_METRICS_ENABLED}",
            "readers": [
                {
                    "class": "PeriodicExportingMetricReader",
                    "module": "opentelemetry.sdk.metrics.export",
                    "enabled": false,
                    "kwargs": {
                        "export_interval_millis": 60000,
                        "export_timeout_millis": 10000,
                        "exporter": {
                            "class": "ConsoleMetricExporter",
                            "module": "opentelemetry.sdk.metrics.export",
                            "kwargs": {}
                        }
                    }
                }, 
                {
                    "class": "PeriodicExportingMetricReader",
                    "module": "opentelemetry.sdk.metrics.export",
                    "enabled": true,
                    "kwargs": {
                        "export_interval_millis": 60000,
                        "export_timeout_millis": 10000,
                        "exporter": {
                            "module": "opentelemetry.exporter.otlp.proto.grpc.metric_exporter",
                            "class": "OTLPMetricExporter"
                        }
                    }
                }
            ]
        }

    }
}